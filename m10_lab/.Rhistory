ggplot(aes(x=BinTime, y=average_frp)) +
geom_point(shape=19) +
geom_smooth(linetype="longdash") +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp)) +
geom_point(shape=19, color="red") +
geom_smooth(linetype="longdash") +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=average_frp)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_line_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=average_frp)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 2)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 2))) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0))) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0), fontsize=8)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0), fontsize=3)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0), fontsize=3)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0), fontsize=3)) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power")
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0))) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_base()
GOES0901_Summarise_Data %>%
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0))) +
geom_point(shape=19, color="black") +
geom_smooth(linetype="longdash") +
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
theme_clean()
GOES0901_Summarise_Data %>%
## for the label, I decided to add individual labels so values could be quickly identified. In this case I decided to round the numbers to whole to clean the graph up
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0))) +
## I chose this shape becuase its a simple dot and I kept the color black for simplicity.
geom_point(shape=19, color="black") +
## I added a local regression line to the graph and gave it a longdash line so it seems like something extra and not part of the data.
geom_smooth(linetype="longdash") +
## I added this to clean up the point lables
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
## I liked this theme because it had a simple design but it made all my lables the correct size to fit the graph the best.
theme_clean()
dev.print(file="GOESR_Fire_Detection_Average_Radioactive_Power.png", device=png,
width=800, height=700)
GOES0901_Plot <- GOES0901_Summarise_Data %>%
## for the label, I decided to add individual labels so values could be quickly identified. In this case I decided to round the numbers to whole to clean the graph up
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0))) +
## I chose this shape becuase its a simple dot and I kept the color black for simplicity.
geom_point(shape=19, color="black") +
## I added a local regression line to the graph and gave it a longdash line so it seems like something extra and not part of the data.
geom_smooth(linetype="longdash") +
## I added this to clean up the point lables
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
## I liked this theme because it had a simple design but it made all my lables the correct size to fit the graph the best.
theme_clean()
ggsave(filename = "GOESR_Fire_Detection_Average_Radioactive_Power.png",
plot = GOES0901_Plot, width=800, height=70)
GOES0901_Summarise_Data %>%
## for the label, I decided to add individual labels so values could be quickly identified. In this case I decided to round the numbers to whole to clean the graph up
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0))) +
## I chose this shape becuase its a simple dot and I kept the color black for simplicity.
geom_point(shape=19, color="black") +
## I added a local regression line to the graph and gave it a longdash line so it seems like something extra and not part of the data.
geom_smooth(linetype="longdash") +
## I added this to clean up the point lables
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
## I liked this theme because it had a simple design but it made all my lables the correct size to fit the graph the best.
theme_clean()
ggsave(filename = "GOESR_Fire_Detection_Average_Radioactive_Power.png",
width=800, height=70)
GOES0901_Summarise_Data %>%
## for the label, I decided to add individual labels so values could be quickly identified. In this case I decided to round the numbers to whole to clean the graph up
ggplot(aes(x=BinTime, y=average_frp, label=round(average_frp, 0))) +
## I chose this shape becuase its a simple dot and I kept the color black for simplicity.
geom_point(shape=19, color="black") +
## I added a local regression line to the graph and gave it a longdash line so it seems like something extra and not part of the data.
geom_smooth(linetype="longdash") +
## I added this to clean up the point lables
geom_text_repel() +
xlab("Round up Time for GMT") +
ylab("Average Fire Radioactive Power") +
ggtitle("GOES-R Fire Detection Average Radioactive Power") +
## I liked this theme because it had a simple design but it made all my lables the correct size to fit the graph the best.
theme_clean()
ggsave(filename = "GOESR_Fire_Detection_Average_Radioactive_Power.png")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
Crop_Range_GOES0901_R <- read_csv("~/Data Science/R_Scripts/dsci_602/m10_lab/Crop_Range_GOES0901_R.csv")
View(Crop_Range_GOES0901_R)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(ggthemes)
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- sample(Crop_Range_GOES0901_R, number_of_samples)
Crop_Range_GOES0901_R <- read_csv("~/Data Science/R_Scripts/dsci_602/m10_lab/Crop_Range_GOES0901_R.csv")
View(Crop_Range_GOES0901_R)
length(Crop_Range_GOES0901_R)
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- sample(Crop_Range_GOES0901_R, number_of_samples)
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow[Crop_Range_GOES0901_R],
number_of_samples)]
df <- read_csv("~/Data Science/R_Scripts/dsci_602/m10_lab/Soil Organic Carbon.csv")
# Load CSV Data
df <- read_csv("~/Data Science/R_Scripts/dsci_602/m10_lab/Soil Organic Carbon.csv")
my_sample = df[sample(nrow(df), num_of_rows), 1:2]
num_of_rows = 10
my_sample = df[sample(nrow(df), num_of_rows), 1:2]
print(my_sample)
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples), 1:2]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram() +
theme_classic()
GOES0901_Sample_Data
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples)]
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:]
View(Crop_Range_GOES0901_R)
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram() +
theme_classic()
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram() +
theme_clean()
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram(color="Blue") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram(color="Black", fill="Blue") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from icount Field") +
ggtitle("See Histogram of icount from Sample") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- list(replicate(runs, one.trial()))
View(icount_means)
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
icount_means%>%
ggplot(aes(x=icount)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
icount_means%>%
ggplot(aes(x=icount_means[1])) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- data.frame(replicate(runs, one.trial()))
icount_means%>%
ggplot(aes(x=icount_means[1])) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
ggplot(aes(x=icount_means)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
ggplot(icount_means, aes(x=icount_means[0])) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
icount_means
ggplot(aes(x=icount_means)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
icount_means <- data.frame(icount_means)
ggplot(aes(x=icount_means)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
icount_means <- data.frame(icount_means)
ggplot(icount_means, aes(x=icount_means$icount_means)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
icount_means <- data.frame(icount_means)
ggplot(icount_means, aes(x=icount_means)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
setwd("~/Data Science/R_Scripts/dsci_602/m10_lab")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(ggthemes)
Crop_Range_GOES0901_R <- read_csv("~/Data Science/R_Scripts/dsci_602/m10_lab/Crop_Range_GOES0901_R.csv")
View(Crop_Range_GOES0901_R)
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from icount Field") +
ggtitle("See Histogram of icount from Sample") +
theme_clean()
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(ggthemes)
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from icount Field") +
ggtitle("See Histogram of icount from Sample") +
theme_clean()
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(ggthemes)
library(tidyverse)
Crop_Range_GOES0901_R <- read_csv("~/Data Science/R_Scripts/dsci_602/m10_lab/Crop_Range_GOES0901_R.csv")
View(Crop_Range_GOES0901_R)
set.seed(111)
number_of_samples <- 2000
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
GOES0901_Sample_Data %>%
ggplot(aes(x=icount)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from icount Field") +
ggtitle("See Histogram of icount from Sample") +
theme_clean()
set.seed(111)
number_of_samples <- 2000
runs <- 100
one.trial <- function(){
GOES0901_Sample_Data <- Crop_Range_GOES0901_R[sample(
nrow(Crop_Range_GOES0901_R),
number_of_samples),1:6]
mean(GOES0901_Sample_Data$icount)
}
icount_means <- replicate(runs, one.trial())
icount_means <- data.frame(icount_means)
ggplot(icount_means, aes(x=icount_means)) +
geom_histogram(color="Black", fill="Blue") +
xlab("Number of Occurance") +
ylab("Values from Mean of icount Field Taken Randomly") +
ggtitle("See Histogram of Mean of icount Taken Randomly from Samples") +
theme_clean()
