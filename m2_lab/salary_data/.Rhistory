print("Hello World")
hello <- "Hello World"
hello <- "Hello, World!"
print(hello)
install.packages("knitr")
install.packages("carData")
library(carData)
data("Salaries")
names(Salaries)
library(readr)
data("Salaries")
force(Salaries)
View(Salaries)
library(readr)
install.packages("readr")
library(readr)
setwd("~/Data Science/R_Scripts/dsci_602/week_4_lab")
install.packages("carData")
Salaries_csv <- read_csv("~/salary_data/salaries.csv")
Salaries_csv <- read_csv("/salary_data/salaries.csv")
setwd("~/Data Science/R_Scripts/dsci_602/week_4_lab/salary_data")
Salaries_csv <- read_csv("salaries.csv")
Salaries_tsv <- read_tsv("salaries.txt")
install.packages("readxl")
library(readxl)
install.packages("haven")
library(haven)
Salaries_excel <- read_excel("salaries.xlsx", sheet=1)
Salaries_stata <- read_dta("salaries.dta")
Salaries_spss <- read_sav("salaries.sav")
Salaries_sas <- read_sas("salaries.sas7bdat")
my.number <- 10
my.number = 10
print(my.number)
mycha1 <- "hello"
print(mycha1)
6+4
a <- 6
b <- 4
c <- a + b
print(c)
d = sqrt(a)
e = log(a)
d
e
v1 <- c(1,2,2.5)
print(v1)
v2 <- c(2,4,5)
print(v2)
v3 <- c(v1,v2)
print(v3)
v4 <- v3[2]
v5 <- v3[c(2,3,5)]
v6 <- sin(v3)
v7 <- length(v3)
v8 <- class(v3)
v9 <- class(mychar1)
v9 <- class(mycha1)
v10 <- summary(v3)
summary(v3)
mean(v3)
min(v3)
median(v3)
max(v3)
names(v3)
names(v3) = c("a", 'b', "c", "d", "hello", "yes")
names(v3)
seqnum <- 1:6
seqnum1 <- c(1:6)
seqnum2 <- seq(from = 1, to = 12, by = 4)
ma <- matrix(1:6, nrow = 3, ncol = 2)
ma
mb <- matrix(7:9, nrow = 3, ncol = 1)
mb
rbind(ma,c(10,20,25))
dim(ma)
dim(c(10,20,25))
rbind(ma,c(10,20))
install.packages("shiny")
install.packages("learnr")
cbind(ma, mb)
ma[2,2]
ma[1:2,1]
mb <- matrix(7:9, nrow = 3, ncol = 1)
ma[,1]
ma[,2]
ma[1,]
dim(ma)
ncol(ma)
nrow(ma)
ma_t <- t(ma)
ma_t
ma
ma_b = cbind(ma,mb)
ma_b
ma_diag <- diag(ma_b)
ma_diag
mn <- matrix(1:12, nrows = 4, ncol = 3)
mn <- matrix(1:12, nrow = 4, ncol = 3)
mn
mn_diag
mn_diag <- diag(mn)
mn
mn_diag
mn <- matrix(1:16, nrow = 4, ncol = 4)
mn_diag <- diag(mn)
mn
mn_diag
mn+2
mn*2
mn1 <- mn+1
mn_multiply <- mn1%*%mn
mn1
mn
mn_multiply
2*1+6*2+10*3+14*4
list(v1)
list(v1,mycha1,ma)
my.list <- list(v1,mycha1,ma)
my.list[1]
my.list <- list(numeric = v1, character = mycha1, maxtrix = ma)
my.list[1]
my.list[3]
names(my.list)
my.list$matrix
my.list <- list(numeric = v1, character = mycha1, matrix = ma)
names(my.list)
my.list$matrix
data
data("mtcars")
class(mtcars)
names(mtcars)
?mtcars
view(mtcars)
view("mtcars")
View(mtcars)
head(mtcars)
summary(mtcars)
mtcars$mpg
mtcars[,1]
knitr::opts_chunk$set(echo = TRUE)
my.matrix <- matrix(1:15, nrow = 3, ncol = 5)
my.matrix
my.matrix.rowmeans <- rowmeans(my.matrix)
my.matrix.rowMeans <- rowMeans(my.matrix)
print(my.matrix.rowMeans)
my.matrix.rowMeans <- rowMeans(my.matrix)
print(my.matrix.rowMeans)
my.matrix.colMeans <- colMeans(my.matrix)
print(my.matrix.colMeans)
my.matrix.rowSds <- rowSds(my.matrix)
install.packages("matrixStats")
library(matrixStats)
install.packages("matrixStats")
library(matrixStats)
my.matrix.rowSds <- rowSds(my.matrix)
print(my.matrix.rowSds)
my.matrix.colSds <- colSds(my.matrix)
print(my.matrix.colSds)
iris <- data("iris")
iris.mean <- mean(iris)
#
iris.meadian <- median(iris)
#
iris.mode <- mode(iris)
#
data("iris")
iris.mean <- mean(iris)
#
iris.meadian <- median(iris)
View(iris)
View(iris)
data("iris")
iris.mean <- mean(iris)
print(iris.mean)
#
iris.meadian <- median(iris)
data("iris")
mean(iris)
#
iris.meadian <- median(iris)
iris_data <- iris
iris_data.mean <- mean(iris_data)
#
iris_data.meadian <- median(iris_data)
iris_data <- iris
names(iris_data)
iris_data.mean <- mean(iris_data)
#
iris_data.meadian <- median(iris_data)
class(iris_data$petal.length)
iris_data <- iris
names(iris_data)
class(iris_data$Petal.Length)
iris_data <- iris
names(iris_data)
class(iris_data$Petal.Length)
petal.length.mean <- mean(iris_data$Petal.Length)
#
petal.length.meadian <- median(iris_data)
iris_data <- iris
names(iris_data)
class(iris_data$Petal.Length)
petal.length <- iris_data$Petal.Length
petal.length.mean <- mean(petal.length)
print(petal.length.mean)
#
petal.length.meadian <- median(petal.length)
print(petal.length.median)
petal.length <- iris_data$Petal.Length
iris_data <- iris
names(iris_data)
class(iris_data$Petal.Length)
petal.length <- iris_data$Petal.Length
petal.length.mean <- mean(petal.length)
print(petal.length.mean)
#
petal.length.meadian <- median(petal.length)
print(petal.length.median)
iris_data <- iris
names(iris_data)
class(iris_data$Petal.Length)
petal.length <- iris_data$Petal.Length
petal.length.mean <- mean(petal.length)
print(petal.length.mean)
#
petal.length.median <- median(petal.length)
print(petal.length.median)
#
petal.length.mode <- mode(petal.length)
print(petal.length.mode)
#
petal.length.max <- max(petal.length)
print(petal.length.max)
#
install.packages("matrixStats")
library(matrixStats)
install.packages("DescTools")
install.packages("matrixStats")
library("DescTools")
iris_data <- iris
names(iris_data)
class(iris_data$Petal.Length)
petal.length <- iris_data$Petal.Length
petal.length.mean <- mean(petal.length)
print(petal.length.mean)
# 3.758
petal.length.median <- median(petal.length)
print(petal.length.median)
# 4.35
petal.length.mode <- Mode(petal.length)
print(petal.length.mode)
#
petal.length.max <- max(petal.length)
print(petal.length.max)
#
# Monte Carlo From Textbook
# Example Rolling Dice
# roll d dice; find P(total = k)
probtotk <- function(d, k, nreps) {
count <- 0
# do the experiment nreps times -- like doing npreps notebook lines
for (rep in 1:nreps) {
sum <- 0
# roll d dice and find their sum
for (j  in 1:d) sum <- sum + roll()
if (sum == k) count <- count + 1
}
return(count/nreps)
}
# simulate the roll of one die;
roll <- function() return(sample(1:6,1))
# example
probtotk(3,8,1000)
probtotk_improved <- function(d, k, nreps) {
count <- 0
# do the experiment nreps times -- like doing npreps notebook lines
for (rep in 1:nreps) {
total <- sum(sample(1:6,d,replace = TRUE))
if (total == k) count <- count + 1
}
return(count/nreps)
}
# example
probtotk_improved(3,8,1000)
roll <- function(nd) return(sample(1:6,nd,replace = TRUE))
probtotk_second_improve <- function(d, k, nreps) {
sums <- vector(length = nreps)
# do the experiment nreps times -- like doing npreps notebook lines
for (rep in 1:reps) sums[rep] <- sum(roll(d))
return(mean(sums==k))
}
probtotk_second_improve(3,8,1000)
roll <- function(nd) return(sample(1:6,nd,replace = TRUE))
probtotk_second_improve <- function(d, k, nreps) {
sums <- vector(length = nreps)
# do the experiment nreps times -- like doing npreps notebook lines
for (rep in 1:nreps) sums[rep] <- sum(roll(d))
return(mean(sums==k))
}
probtotk_second_improve(3,8,1000)
roll <- function(nd) return(sample(1:6,nd,replace = TRUE))
probtotk_second_improve <- function(d, k, nreps) {
sums <- vector(length = nreps)
# do the experiment nreps times -- like doing npreps notebook lines
for (rep in 1:nreps) sums[rep] <- sum(roll(d))
return(mean(sums==k))
}
probtotk_second_improve(3,8,1000)
###############################################################################
roll <- fuunction(nd) return(sample(1:6, nd, replace = TRUE))
roll <- function(nd) return(sample(1:6,nd,replace = TRUE))
probtotk_second_improve <- function(d, k, nreps) {
sums <- vector(length = nreps)
# do the experiment nreps times -- like doing npreps notebook lines
for (rep in 1:nreps) sums[rep] <- sum(roll(d))
return(mean(sums==k))
}
probtotk_second_improve(3,8,1000)
###############################################################################
roll <- function(nd) return(sample(1:6, nd, replace = TRUE))
probtotk_third_improve <- function(d, k, nreps) {
# do the experiment nreps times -- like doing npreps notebook lines
sums <- replicate(nreps, sum(roll(d)))
return(mean(sums==k))
}
probtotk_third_improve(3,8,1000)
